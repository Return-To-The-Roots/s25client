FIND_PACKAGE(SDL)
FIND_PACKAGE(SDL_mixer)

IF(NOT SDL_FOUND)
	MESSAGE(WARNING ": SDL library not found: Not building SDL audiodriver")
ELSEIF(NOT SDLMIXER_FOUND)
	MESSAGE(WARNING ": SDL_mixer library not found: Not building SDL audiodriver")
ELSE()
	FIND_PACKAGE(Boost 1.55.0 COMPONENTS filesystem system REQUIRED)
	CORRECT_LIB(SDL_LIBRARY SDL)
	CORRECT_LIB(SDLMIXER_LIBRARY SDL_mixer)

	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}
						"${PROJECT_SOURCE_DIR}/driver/src"
						"${PROJECT_SOURCE_DIR}/libendian/src"
						${SDL_INCLUDE_DIR}
						${SDLMIXER_INCLUDE_DIR}
						${Boost_INCLUDE_DIR}
					   )
	
	INCLUDE(AddFileDependencies)
	ADD_FILE_DEPENDENCIES("${PROJECT_SOURCE_DIR}/build_version.cpp" "${CMAKE_BINARY_DIR}/build_version_defines.h")

	SET(SL_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX})
	IF ( "${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
		ADD_DEFINITIONS(-DBUILD_DLL)
		SET(SL_PREFIX "")
	ENDIF ()
		
	ADD_LIBRARY(audioSDL SHARED AudioSDL.cpp AudioSDL.h main.h SoundSDL_Music.cpp SoundSDL_Music.h SoundSDL_Effect.cpp SoundSDL_Effect.h ${PROJECT_SOURCE_DIR}/build_version.cpp ../../../src/DriverInterface.cpp)
	ADD_DEPENDENCIES(audioSDL updateversion)
	TARGET_LINK_LIBRARIES(audioSDL audiodrv endian s25util ${SDL_LIBRARY} ${SDLMIXER_LIBRARY} ${Boost_LIBRARIES})
	
	SET(_OUTPUT_DIR "${CMAKE_BINARY_DIR}/${RTTR_DRIVERDIR}/audio")
	SET_TARGET_PROPERTIES(audioSDL PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY_RELEASE "${_OUTPUT_DIR}"
		RUNTIME_OUTPUT_DIRECTORY_DEBUG "${_OUTPUT_DIR}"
		RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_OUTPUT_DIR}"
		LIBRARY_OUTPUT_DIRECTORY_RELEASE "${_OUTPUT_DIR}"
		LIBRARY_OUTPUT_DIRECTORY_DEBUG "${_OUTPUT_DIR}"
		LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_OUTPUT_DIR}"
	)

	INSTALL(TARGETS audioSDL DESTINATION ${RTTR_DRIVERDIR}/audio)
ENDIF ()
